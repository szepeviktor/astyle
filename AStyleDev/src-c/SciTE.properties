# SciTE.properties is the per directory local options file and can be used to
# override settings made in SciTEGlobal.properties and SciTEUser.properties

# 32-bit compile - uses GNUstep compiler
#ccpath=C:\Programs\GNUstep
# 64-bit compile
ccpath=C:\Programs\MinGW

if PLAT_WIN
	# compile
	# -enable-stdcall-fixup  disables a warning message on 32-bit compiles
	command.compile.*.cpp=$(ccpath)\bin\g++ "$(FileNameExt)"  -o "$(FileName)"  \
-Wl,--enable-auto-import -Wl,-enable-stdcall-fixup -Os -Wall -Wextra  -Wl,-L,.  -Wl,-rpath,.  \
-Wl,-l,AStyle30
	# build - not active
	command.build.*.cpp=
	# clean
	command.clean.*.cpp=del "$(FileName).exe"
	# go
	command.go.*.cpp="$(FileName)"
	command.go.needs.*.cpp=$(command.compile.*.cpp)
	# format project
	options=--options=$(USERPROFILE)\Projects\AStyleTest\file-py\astyle-options.cfg
	command.name.10.*.cpp=Format Project (AStyle)
	command.10.*.cpp="C:\Program Files\AStyle\astyle" "$(options)" -A9s *.cpp

if PLAT_GTK
	# compile - not active
	command.compile.*.cpp=
	# build
	command.build.*.cpp=g++  "$(FileNameExt)"  -o "$(FileName)"  \
-Os -Wall -Wextra  -Wl,-L,./  -Wl,-rpath,./  -Wl,-l,:libastyle.so.3.0
	# clean
	command.clean.*.cpp=rm "$(FileName)"
	# go
	command.go.*.cpp="$(FileName)"
	command.go.needs.*.cpp=$(command.build.*.cpp)
	# format project
	options=--options=$(HOME)\Projects\AStyleTest\file-py\astyle-options.cfg
	command.name.10.*.cpp=Format Project (AStyle)
	command.10.*.cpp=astyle "$(options)" -A9s *.cpp

if PLAT_MAC
	command.compile.*.cpp=clang  "$(FileNameExt)"  -o "$(FileName)"  \
-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk  \
-Weverything -Wall -Wextra -fno-exceptions -fno-rtti -Wno-missing-noreturn  \
-L.  -lstdc++  -lastyle30
	# build - not active
	command.build.*.cpp=
	# clean
	command.clean.*.cpp=rm "$(FileName)"
	# SciTE does not have HOME or USER. It is OK if run in a terminal.
	# To view the defined variables enter "set" in the Output window.
	command.go.*.cpp=HOME=/Users/jimp DYLD_FALLBACK_LIBRARY_PATH=. $(FileName)
	command.go.needs.*.cpp=$(command.compile.$(file.patterns.cplusplus))

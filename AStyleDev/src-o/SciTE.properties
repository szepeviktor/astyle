# SciTE.properties is the per directory local options file and can be used to
# override settings made in SciTEGlobal.properties, SciTEUser.properties and
# SciTEDirectory.properties.

ccpath=C:\Programs\GNUstep
gspath=C:\Programs\GNUstep
prjpath=C:\Users\jimp\Projects
mincludes=-fconstant-string-class=NSConstantString  -D_NATIVE_OBJC_EXCEPTIONS
mlibs=-lgnustep-base  -lobjc

# always build and run the current file
if PLAT_WIN
	# compile
	# -enable-stdcall-fixup  disables a warning message on 32-bit compiles
	command.compile.*.m="$(ccpath)\bin\gcc"  "$(FileNameExt)"  -o "$(FileName)"  \
-I$(gspath)\GNUstep\System\Library\Headers  $(mincludes)  -Os -Wall -Wextra  \
-L$(gspath)\GNUstep\System\Library\Libraries  $(mlibs)  \
-Wl,-enable-stdcall-fixup  -L.\  -lAStyle-2.06
	# clean
	command.clean.*.m=del "$(FileName).exe"
	# go
	command.go.*.m=$(FileName).exe
	# command.go.needs.*.m=$(command.compile.*.m)

if PLAT_GTK
	# compile
	command.compile.*.m=gcc  "$(FileNameExt)"  -o "$(FileName)"  \
-I/usr/include/GNUstep  $(mincludes)  -Os -Wall -Wextra  \
-L/usr/lib/GNUstep  -L./  $(mlibs)  -Wl,-rpath,./  -lastyle-2.06
	# clean
	command.clean.*.m=rm "$(FileName)"
	# go
	command.go.*.m=./"$(FileName)"
	#command.go.needs.*.m=$(command.compile.*.m)

if PLAT_MAC
	command.compile.*.m=clang  "$(FileNameExt)"  -o "$(FileName)"  \
-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk  \
-framework Foundation  -Os -Wall -Wextra -Weverything  \
-L.  -lobjc  -lastyle-2.06
	command.build.$(file.patterns.cplusplus)=
	# clean
	command.clean.*.m=rm "$(FileName)"
	# go
	# SciTE does not have HOME or USER. It is OK if run in a terminal.
	# To view the defined variables enter "set" in the Output window.
	command.go.*.m=HOME=/Users/jimp DYLD_FALLBACK_LIBRARY_PATH=. "$(FileName)"
	command.go.needs.*.m=$(command.compile.*.m)
